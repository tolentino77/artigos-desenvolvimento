No artigo On the Criteria to Be Used in Decomposing Systems into Modules, de David L. Parnas, publicado em 1972 na Communications of the ACM, o autor discute os princípios que devem orientar a modularização de sistemas e propõe critérios que buscam garantir maior flexibilidade, compreensibilidade e facilidade de manutenção. Em contraste com as abordagens tradicionais da época, que se baseavam na divisão do software segundo o fluxo de processamento, Parnas introduz o conceito de information hiding, que se tornaria um dos pilares do design de software moderno.


O autor inicia o texto destacando os benefícios esperados da modularização: a possibilidade de desenvolvimento paralelo por diferentes equipes, a redução do tempo de implementação, a facilidade de compreender cada módulo isoladamente e a flexibilidade para realizar mudanças sem comprometer todo o sistema. E logo depois, o autor exemplifica seu raciocínio por meio do problema de geração de índices KWIC (Key Word in Context), propondo duas alternativas de decomposição.


A primeira, considerada convencional, organiza o sistema em módulos correspondentes às etapas do processamento, como entrada, deslocamento circular, ordenação e saída. Embora funcional, essa decomposição apresenta uma fraqueza, as mudanças em decisões de projeto, como o formato de armazenamento ou a forma de ordenação, o que acaba exigindo modificações em diversos módulos. Já a segunda abordagem, baseada no critério de information hiding, estrutura os módulos de acordo com as decisões mais suscetíveis a alterações. Assim, por exemplo, o modo de armazenamento das linhas ou a estratégia de ordenação ficam encapsulados em módulos específicos, de forma que alterações em suas implementações não impactam os demais.


É discutido pelo autor aspectos relacionados à eficiência, reconhecendo que a modularização por ocultamento de informação pode, inicialmente, gerar maior sobrecarga. No entanto, argumenta que soluções de implementação podem mitigar esse problema, sem abrir mão das vantagens estruturais da abordagem. Além disso, Parnas diferencia a noção de boa decomposição da ideia de hierarquia de módulos, afirmando que ambos são conceitos independentes, mas complementares: a hierarquia organiza a dependência entre módulos, enquanto o information hiding assegura estabilidade e manutenibilidade.

O autor conclui que a modularização deve começar pela identificação das decisões de projeto mais críticas e voláteis, e não pela representação em fluxogramas. Cada módulo deve ser responsável por ocultar uma decisão de projeto, revelando o mínimo possível sobre sua implementação. Essa perspectiva confere ao sistema maior adaptabilidade a mudanças, além de facilitar a compreensão e possibilitar a reutilização de componentes.
O impacto do artigo foi grande, influenciando diretamente práticas que atualmente são centrais na engenharia de software, como o princípio do baixo acoplamento e alta coesão, o design orientado a objetos e o desenvolvimento de arquiteturas robustas. Com clareza argumentativa e exemplos práticos, Parnas não somente ofereceu uma técnica de modularização, mas estabeleceu uma filosofia de projeto visando a previsibilidade das mudanças e na sustentabilidade do software.
